/*
 * Copyright (c) 2016.
 *
 * This file is part of ProcessManager.
 *
 * ProcessManager is free software: you can redistribute it and/or modify it under the terms of version 3 of the
 * GNU Lesser General Public License as published by the Free Software Foundation.
 *
 * ProcessManager is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with ProcessManager.  If not,
 * see <http://www.gnu.org/licenses/>.
 */

pluginManagement {
    repositories {
        mavenLocal()
        jcenter()
        gradlePluginPortal()
        google()
        maven { url "https://plugins.gradle.org/m2/" }

        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
    }
    resolutionStrategy {
        eachPlugin {
            switch (requested.id.id) {
                case "com.android.library":
                case "com.android.application" :
                    def ver = requested.version!=null ? requested.version : androidBuildToolsVersion
                    useModule("com.android.tools.build:gradle:${ver}");
                    break
                case "org.jetbrains.kotlin.android":
                case "kotlin-android-extensions" :
                    def ver = requested.version!=null ? requested.version : kotlin_version
                    useModule("org.jetbrains.kotlin:kotlin-gradle-plugin:${ver}");
                    break
                case "org.jetbrains.dokka-android" :
                    def ver = requested.version!=null ? requested.version : dokkaVersion
                    useModule("org.jetbrains.dokka:dokka-android-gradle-plugin:${ver}")
                    break
                case "kotlinx-serialization":
                    def version = (requested.version == null || requested.version.length() == 0) ? serializationPluginVersion : requested.version
                    useModule("org.jetbrains.kotlinx:kotlinx-gradle-serialization-plugin:$version")
                case "com.jfrog.bintray":
                    useVersion(requested.version!=null ? requested.version : bintrayVersion)
            }
        }
    }
}

rootProject.name = "xmlutil"

include(":core:common")
include(":core:common-nonshared")
include(":core:java")
include(":core:jvm")
include(":core:js")
include(":serialization:common")
include(":serialization:java")
include(":serialization:js")

if (Boolean.parseBoolean(androidEnabledProp)) {
    include(":core:android")
    include(":serialization:test-android")
}
